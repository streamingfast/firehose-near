// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.19.4
// source: sf/near/transform/v1/transform.proto

package pbtransform

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// BasicReceiptFilter applies a logical OR everywhere it can
type BasicReceiptFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts             []string            `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	PrefixAndSuffixPairs []*PrefixSuffixPair `protobuf:"bytes,2,rep,name=prefix_and_suffix_pairs,json=prefixAndSuffixPairs,proto3" json:"prefix_and_suffix_pairs,omitempty"`
}

func (x *BasicReceiptFilter) Reset() {
	*x = BasicReceiptFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_near_transform_v1_transform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicReceiptFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicReceiptFilter) ProtoMessage() {}

func (x *BasicReceiptFilter) ProtoReflect() protoreflect.Message {
	mi := &file_sf_near_transform_v1_transform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicReceiptFilter.ProtoReflect.Descriptor instead.
func (*BasicReceiptFilter) Descriptor() ([]byte, []int) {
	return file_sf_near_transform_v1_transform_proto_rawDescGZIP(), []int{0}
}

func (x *BasicReceiptFilter) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *BasicReceiptFilter) GetPrefixAndSuffixPairs() []*PrefixSuffixPair {
	if x != nil {
		return x.PrefixAndSuffixPairs
	}
	return nil
}

// PrefixSuffixPair applies a logical AND to prefix and suffix when both fields are non-empty.
// * {prefix="hello",suffix="world"} will match "hello.world" but not "hello.friend"
// * {prefix="hello",suffix=""}      will match both "hello.world" and "hello.friend"
// * {prefix="",suffix="world"}      will match both "hello.world" and "good.day.world"
// * {prefix="",suffix=""}           is invalid
//
// Note that the suffix will usually have a TLD, ex: "mydomain.near" or "mydomain.testnet"
type PrefixSuffixPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Suffix string `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
}

func (x *PrefixSuffixPair) Reset() {
	*x = PrefixSuffixPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_near_transform_v1_transform_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrefixSuffixPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefixSuffixPair) ProtoMessage() {}

func (x *PrefixSuffixPair) ProtoReflect() protoreflect.Message {
	mi := &file_sf_near_transform_v1_transform_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefixSuffixPair.ProtoReflect.Descriptor instead.
func (*PrefixSuffixPair) Descriptor() ([]byte, []int) {
	return file_sf_near_transform_v1_transform_proto_rawDescGZIP(), []int{1}
}

func (x *PrefixSuffixPair) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *PrefixSuffixPair) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

var File_sf_near_transform_v1_transform_proto protoreflect.FileDescriptor

var file_sf_near_transform_v1_transform_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x66, 0x2f, 0x6e, 0x65, 0x61, 0x72, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x73, 0x66, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x22, 0x8f, 0x01, 0x0a,
	0x12, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x5d, 0x0a, 0x17, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x75,
	0x66, 0x66, 0x69, 0x78, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x73, 0x66, 0x2e, 0x6e, 0x65, 0x61, 0x72, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x53, 0x75,
	0x66, 0x66, 0x69, 0x78, 0x50, 0x61, 0x69, 0x72, 0x52, 0x14, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x41, 0x6e, 0x64, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x50, 0x61, 0x69, 0x72, 0x73, 0x22, 0x42,
	0x0a, 0x10, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x50, 0x61,
	0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75,
	0x66, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66,
	0x69, 0x78, 0x42, 0x52, 0x5a, 0x50, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x73, 0x74, 0x2f, 0x66,
	0x69, 0x72, 0x65, 0x68, 0x6f, 0x73, 0x65, 0x2d, 0x6e, 0x65, 0x61, 0x72, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x66, 0x2f, 0x6e, 0x65, 0x61, 0x72, 0x2f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sf_near_transform_v1_transform_proto_rawDescOnce sync.Once
	file_sf_near_transform_v1_transform_proto_rawDescData = file_sf_near_transform_v1_transform_proto_rawDesc
)

func file_sf_near_transform_v1_transform_proto_rawDescGZIP() []byte {
	file_sf_near_transform_v1_transform_proto_rawDescOnce.Do(func() {
		file_sf_near_transform_v1_transform_proto_rawDescData = protoimpl.X.CompressGZIP(file_sf_near_transform_v1_transform_proto_rawDescData)
	})
	return file_sf_near_transform_v1_transform_proto_rawDescData
}

var file_sf_near_transform_v1_transform_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sf_near_transform_v1_transform_proto_goTypes = []interface{}{
	(*BasicReceiptFilter)(nil), // 0: sf.near.transform.v1.BasicReceiptFilter
	(*PrefixSuffixPair)(nil),   // 1: sf.near.transform.v1.PrefixSuffixPair
}
var file_sf_near_transform_v1_transform_proto_depIdxs = []int32{
	1, // 0: sf.near.transform.v1.BasicReceiptFilter.prefix_and_suffix_pairs:type_name -> sf.near.transform.v1.PrefixSuffixPair
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sf_near_transform_v1_transform_proto_init() }
func file_sf_near_transform_v1_transform_proto_init() {
	if File_sf_near_transform_v1_transform_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sf_near_transform_v1_transform_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicReceiptFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_near_transform_v1_transform_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrefixSuffixPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sf_near_transform_v1_transform_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sf_near_transform_v1_transform_proto_goTypes,
		DependencyIndexes: file_sf_near_transform_v1_transform_proto_depIdxs,
		MessageInfos:      file_sf_near_transform_v1_transform_proto_msgTypes,
	}.Build()
	File_sf_near_transform_v1_transform_proto = out.File
	file_sf_near_transform_v1_transform_proto_rawDesc = nil
	file_sf_near_transform_v1_transform_proto_goTypes = nil
	file_sf_near_transform_v1_transform_proto_depIdxs = nil
}
